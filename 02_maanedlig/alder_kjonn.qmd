# Alder og kjønn

*noe om alder og kjønn*

**legge til last-ned-knapp**

**legge til input for å velge periode**


```{python}
#| output: false
#| include: false
from hjelpefunksjoner import hente_bq_df
from IPython.display import display, HTML

table_bq = "agg_aap_kjonn_alder_mnd"
where_clause = "ytelse = 'Arbeidsavklaringspenger' and kjonn in ('K', 'M')"
df_hel = hente_bq_df(table_bq, where_clause)

df = df_hel[["aarmnd", "kjonn", "aldersgruppe", "mottaker_antall"]]

df_K = df[df["kjonn"] == "K"]
df_M = df[df["kjonn"] == "M"]
```


## Tabell

```{python}
#| echo: false

# Display the scrollable table
html_table = df.to_html(index=False)
scrollable_table = f"""
<div style="height: 200px; overflow-y: auto;">
    {html_table}
</div>
"""
display(HTML(scrollable_table))

csv = df_hel.to_csv(index=False)
# Encode CSV to base64
import base64
b64 = base64.b64encode(csv.encode()).decode()

# Create a download link and display it
download_link = f'<a download="aap_kjonn_alder.csv" href="data:text/csv;base64,{b64}" target="_blank">Last ned som CSV</a>'
display(HTML(download_link))
```


## Plotting

```{python}
#| echo: false
import plotly.express as px

fig = px.line(df_hel, x="aarmnd_dato", y="mottaker_antall", color="aldersgruppe", facet_row="kjonn", title="Mottakere av (AAP) etter alder og kjønn")
fig.update_xaxes(title_text='')
fig.update_yaxes(title_text='')
fig.show()

```